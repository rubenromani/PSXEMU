#pragma once
#define REGISTER_SIZE 4

#define DEVICE_MAP(address, device_start_address, device_end_address) \
	((device_start_address <= address) && (device_end_address > address))

#define CPU_RESET_ADDRESS 0x1fc00000

#define BIOS_START_ADDRESS 0x1fc00000
#define BIOS_ADDR_SPACE_SIZE (512*1024)
#define BIOS_END_ADDRESS (BIOS_START_ADDRESS + BIOS_ADDR_SPACE_SIZE)

#define MEMCONTROL_START_ADDRESS 0x1f801000
#define MEMCONTROL_ADDR_SPACE_SIZE 36
#define MEMCONTROL_END_ADDRESS (MEMCONTROL_START_ADDRESS + MEMCONTROL_ADDR_SPACE_SIZE)

#define RAM_START_ADDRESS 0x00000000
#define RAM_ADDR_SPACE_SIZE (1024*1024*2)
#define RAM_END_ADDRESS (RAM_START_ADDRESS + RAM_ADDR_SPACE_SIZE)

#define RAM2_START_ADDRESS 0x00200000
#define RAM2_END_ADDRESS (RAM2_START_ADDRESS + RAM_ADDR_SPACE_SIZE)

#define SPU_START_ADDRESS 0x1f801c00
#define SPU_ADDR_SPACE_SIZE 640
#define SPU_END_ADDRESS (SPU_START_ADDRESS + SPU_ADDR_SPACE_SIZE)

#define EXPANSION2_START_ADDRESS 0x1f802000
#define EXPANSION2_ADDR_SPACE_SIZE 66
#define EXPANSION2_END_ADDRESS (EXPANSION2_START_ADDRESS + EXPANSION2_ADDR_SPACE_SIZE)

#define EXPANSION1_START_ADDRESS 0x1f000084
#define EXPANSION1_ADDR_SPACE_SIZE (8192 * 1024)
#define EXPANSION1_END_ADDRESS (EXPANSION1_START_ADDRESS + EXPANSION1_ADDR_SPACE_SIZE)

#define IRQ_CONTROL_START_ADDRESS 0x1f801070
#define IRQ_CONTROL_ADDR_SPACE_SIZE 8
#define IRQ_CONTROL_END_ADDRESS (IRQ_CONTROL_START_ADDRESS + IRQ_CONTROL_ADDR_SPACE_SIZE)

#define TIMERS_START_ADDRESS 0x1f801104
#define TIMERS_ADDR_SPACE_SIZE 4
#define TIMERS_END_ADDRESS (TIMERS_START_ADDRESS + TIMERS_ADDR_SPACE_SIZE)

#define RAM_SIZE_LOCATION 0x1f801060
#define CACHE_CONTROL 0xfffe0130
